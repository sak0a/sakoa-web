#!/bin/bash

# Node.js Application Restart Script for Plesk
# This script attempts multiple methods to restart the Node.js application

echo "üîÑ Attempting to restart Node.js application..."

# Get the current directory
APP_DIR="/var/www/vhosts/sakoa.xyz/httpdocs"
cd "$APP_DIR"

# Method 1: Touch restart file (some Node.js process managers watch for this)
echo "üìù Creating restart trigger files..."
touch .output/server/restart.txt 2>/dev/null || true
touch .restart 2>/dev/null || true
echo "$(date)" > .restart_trigger 2>/dev/null || true

# Method 2: Kill existing Node.js processes gracefully
echo "üîÑ Attempting graceful process restart..."
pkill -SIGTERM -f "node.*index.mjs" 2>/dev/null && echo "‚úÖ Sent SIGTERM to Node.js process" || echo "‚ÑπÔ∏è  No Node.js process found"
pkill -SIGTERM -f "sakoa.xyz" 2>/dev/null && echo "‚úÖ Sent SIGTERM to domain process" || echo "‚ÑπÔ∏è  No domain process found"

# Wait a moment for graceful shutdown
sleep 2

# Method 3: Force kill if still running
echo "üîÑ Checking for remaining processes..."
pkill -SIGKILL -f "node.*index.mjs" 2>/dev/null && echo "‚ö†Ô∏è  Force killed Node.js process" || echo "‚úÖ No processes to force kill"

# Method 4: Try to start the application (if it's not managed by Plesk)
echo "üöÄ Attempting to start application..."
if [ -f ".output/server/index.mjs" ]; then
    # Check if we can start it manually (background process)
    nohup node .output/server/index.mjs > app.log 2>&1 &
    if [ $? -eq 0 ]; then
        echo "‚úÖ Application started manually"
    else
        echo "‚ö†Ô∏è  Could not start application manually"
    fi
else
    echo "‚ùå Application file not found"
fi

echo ""
echo "üéØ Restart attempts completed!"
echo ""
echo "If the application is still not responding:"
echo "1. Go to Plesk Control Panel"
echo "2. Navigate to sakoa.xyz ‚Üí Node.js"
echo "3. Click 'Restart App' button"
echo "4. Check the application logs for errors"
echo ""
echo "Application should be accessible at: https://sakoa.xyz"
